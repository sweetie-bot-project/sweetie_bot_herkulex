# DEPLOY BASIC HERKULEX_* SUBSYSTEM WITHOUT SCHEDULER

import("rtt_ros");
ros.import("rtt_rospack");
ros.import("rtt_sensor_msgs");

ros.import("rtt_sweetie_bot_herkulex_msgs");
ros.import("sweetie_bot_herkulex_control");

# LOAD HERKULEX_* COMPONENTS

loadComponent("herk_array","herkulex::HerkulexArray");
loadService("herk_array", "marshalling");
herk_array.marshalling.loadProperties(ros.find("sweetie_bot_herkulex_control") + "/scripts/test_servo_array.cpf");
herk_array.timeout = 0.01; 

loadComponent("herk_driver","herkulex::HerkulexDriver");
herk_driver.port_name = "/dev/ttyUSB0";
herk_driver.baudrate = 115200;

# CONNECT OPERATIONS OF HERKULEX_* subsystem

connectOperations("herk_array.sendPacketCM", "herk_driver.sendPacket");
connectOperations("herk_driver.receivePacket", "herk_array.receivePacketCM");
stream("herk_array.out_states", ros.comm.topic("/herkulex/servo_states"))

herk_array.detailed_state = true;

# START HERKULEX_* SUBSYSTEM (without scheduler)

herk_driver.configure();
# Driver must be active when array is configurated.
herk_driver.start();

herk_array.configure();
